libDAI-0.2.4 (2010-02-11)
-------------------------

New features:
* Implemented Tree-Reweighted BP
* [Frederik Eaton] Implemented Fractional Belief Propagation

Miscellaneous improvements:
* Improved documentation
* [Frederik Eaton] Added constructors for BBPCostFunction
* [Frederik Eaton] Added accessor/mutator for the elements of a SmallSet<>
* [Frederik Eaton] Added unary minus to TProb<>
* [Frederik Eaton] Added Hellinger distance to TProb<>::DistType
* [Frederik Eaton] Two small patches for src/jtree.cpp and utils/createfg.cpp
* tests/testdai option "marginals" now has three possible values: NONE
  outputs no marginals, VAR only variable marginals, and ALL outputs all
  marginals calculated by the algorithm.
* Strengthened convergence criteria of various algorithms
* Added GraphAL, an adjacency list implementation for graphs,
  similar to (but simpler than) BipartiteGraph
* Added some functionality to create various standard factors
  (the functions whose names start with "createFactor")
* Added examples example_sprinkler_gibbs and example_sprinkler_em
* Implemented various heuristics for choosing a variable elimination sequence 
  in JTree
* Added BETHE method for GBP/HAK cluster choice

Build system:
* Moved platform independent build options into Makefile.ALL
* Windows platform now needs Boost 1.37 or higher

Code cleanup:
* Cleaned up utils/createfg and tests/testdai

Interface changes (the old interface is marked obsolete and will be removed in the next release):
* Removed obsolete/deprecated stuff
* Renamed Graph into GraphEL (for Graph, implemented as Edge List)
* Renamed some functions of BipartiteGraph:
    add1() -> addNode1()
    erase1() -> eraseNode1()
    nr1() -> nrNodes1()
    add2() -> addNode2()
    erase2() -> eraseNode2()
    nr2() -> nrNodes2()
* Renamed some functions in ClusterGraph:
    ClusterGraph::eliminationCost() -> ::eliminationCost_MinFill() 
    ClusterGraph::VarElim() -> ClusterGraph::VarElim( sequentialVariableElimination( ElimSeq ) ) 
    ClusterGraph::VarElim_MinFill() -> ClusterGraph::VarElim( greedyVariableElimination( eliminationCost_MinFill ) )
* Changed interface of one RegionGraph constructor
* Renamed "Clamped BP" into "Conditioned BP"

Bug fixes:
* Fixed regression in scripts/regenerate-properties (now all errors are 
  gathered before throwing the exception, as used to be the case)
* Fixed FTBFS errors on MACOSX (thanks to Sebastian Riedel for reporting this bug)
* [Alexander Schwing] Fixed error in BP that occured with damping
  and using log-domain updates
* Fixed bug in HAK for trivial region graphs (with only one outer region
  and no inner regions), reported by Alejandro Lage.


libDAI-0.2.3 (2009-11-16)
-------------------------

New features:
* Complete doxygen documentation (although more detailed documentation still
  has to be written)
* [Charles Vaske] Added parameter learning for conditional probabilities by 
  Expectation Maximization
* [Patrick Pletscher] Added SWIG wrapper code for experimental python and 
  octave interfaces
* Added Max-Product functionality to JTree
* [Frederik Eaton] Added Back-Belief-Propagation
* [Frederik Eaton] Added approximate inference method "Clamped Belief Propagation"
* [Frederik Eaton] Added approximate inference method "Gibbs sampling"

Code cleanup:
* Updated copyright headers
* Cleaned up error handling by introducing the DAI_THROWE macro
* Introduced DAI_DEBASSERT macro to abbreviate a common pattern
* Replaced the standard assert() macro by DAI_ASSERT, which throws a
  dai::Exception and is even active if NDEBUG is defined
* Removed all the virtual default constructors *::create(), as they are not used
* [Frederik Eaton] Removed unnecessary copy constructors and assignment operators
* [Frederik Eaton] Change cout to cerr in warnings and error messages

Miscellaneous improvements:
* BipartiteGraph:
  - Added eraseEdge( size_t n1, size_t n2 )
  - [Frederik Eaton] Improved documentation of Neighbor
* TProb<T>:
  - Added divided_by(const TProb<T>&) const
  - Added constructor TProb<T>( const std::vector<S> &v )
  - Added size_t draw(), which draws a random index
  - [Frederik Eaton] Added setUniform()
  - [Frederik Eaton] Added sumAbs()
  - [Frederik Eaton] Added argmax()
  - [Giuseppe Passino] Added begin(), end()
* TFactor<T>:
  - [Giuseppe Passino] Added begin(), end()
  - [Charles Vaske] Added TFactor( const std::vector<Var> &vars, const std::vector<T> &p ),
    which reorders variables to canonical ordering before storing the table
  - Added constructor TFactor<T>( const VarSet &vars, const std::vector<S> &v )
  - Extended functionality of TFactor<T>::operators +,-,+=,-= to handle different VarSets
  - Added TFactor<T>::maxMarginal (similar to marginal but with max instead of sum)
* State:
  - [Giuseppe Passino] Added prefix ++ operator
* Permute:
  - [Charles Vaske] Added constructor in Permute for canonical variable ordering
* FactorGraph:
  - [Frederik Eaton] Added clampVar()
  - [Frederik Eaton] Added clampFactor()
  - [Giuseppe Passino] Added begin(), end()
* PropertySet:
  - Added keys(), for getting all keys
  - [Frederik Eaton] Added default constructor
  - [Frederik Eaton] Added constructor from string
* InfAlg:
  - Added setProperties(), getProperties() and printProperties()
  - [Frederik Eaton] Added beliefV(), beliefF()
* ExactInf:
  - Added calcMarginal(const VarSet &)
* HAK:
  - Added "init" parameter to allow for random initialization
* BP:
  - [Giuseppe Passino] Added findMaximum(), which can be used after running
    max-product BP to construct a global state with maximum probability
* JTree:
  - Added findMaximum(), which can be used after running
    max-product JTree to construct a global state with maximum probability
* MatLab interface:
  - MEX file dai now also returns variable and factor beliefs
  - [Sebastian Nowozin] MEX file dai now also optionally returns the MAP state
    (only for BP and JTree)
* README is now created automatically from doxygen documentation
* [Frederik Eaton] Added script for automatically generating properties code (used by CBP and BBP)
* [Frederik Eaton] Added newInfAlgFromString to alldai.h/cpp
* [Frederik Eaton] Added some utility macros (DAI_PV, DAI_DMSG, DAI_IFVERB)
  and functions (concat(),rnd()) to util.h
* Changed output stream operator<< for Var and VarSet
* [Frederik Eaton] Improved parsing code in tests/testdai to allow recursive
  alias substitutions
* [Frederik Eaton] Added useful aliases to aliases.conf
* [Giuseppe Passino] Optimised maximum-residual BP by using a reversed ordered
  set instead of the linear search (which can yield enormous speedups - a
  factor 500 has been measured on a binary Ising grid with 128x128 variables!)
* Added debug assertions to Var which check for inconsistent dimensions of
  variables with the same labels
* toc() now returns POSIX system time with maximum accuracy of microseconds
* Exception objects now remember their error code
* Examples:
  - Moved example.cpp to examples/
  - Added examples/example_bipgraph.cpp
  - Added examples/example_varset.cpp
  - Added examples/example_sprinkler.cpp
  - Added examples/example_permute.cpp
  - Added python and octave ports for examples/example_sprinkler.cpp

Build system:
* Improved Makefile:
  - Merged Makefile.win and Makefile.shared into Makefile
  - Macros DAI_VERSION and DAI_DATE have been introduced,
    in order to store this information in a central place
  - Introduced CCNODEBUGFLAGS in Makefile
  - Switched Makefile.win to GNU Make syntax
  - [Frederik Eaton] Added TAGS, lib targets to Makefile
* Compatibility:
  - [Peter Gober] libDAI can now be built on Cygwin
  - [Dan Preston] libDAI can now be built on Mac OS X
  - Changed regression test so that it also works under Windows

Interface changes (the old interface is marked obsolete and will be removed in the next release):
* Var:
  - Variable labels 